#!/usr/bin/env python
PACKAGE = "uav_ros_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("hover",    double_t,    0,   "Hover thrust",       0,      0,  1)

gen.add("k_p_xy",    double_t,    0,   "Position controller (xy-axes) proportional gain",       5,      0,  10)
gen.add("k_i_xy",    double_t,    0,   "Position controller (xy-axes) integrator gain",         5,      0,  10)
gen.add("k_d_xy",    double_t,    0,   "Position controller (xy-axes) derivator gain",          5,      0,  10)
gen.add("lim_high_xy",      double_t,    0,   "Position controller (xy-axes) limit - high",   0.5,   0,  50)
gen.add("lim_low_xy",       double_t,    0,   "Position controller (xy-axes) limit - low",   -0.5,  -50,  0)

gen.add("k_p_vxy",    double_t,    0,   "Velocity controller (xy-axes) proportional gain",       5,      0,  10)
gen.add("k_i_vxy",    double_t,    0,   "Velocity controller (xy-axes) integrator gain",         5,      0,  10)
gen.add("k_d_vxy",    double_t,    0,   "Velocity controller (xy-axes) derivator gain",          5,      0,  10)
gen.add("lim_high_vxy",      double_t,    0,   "Velocity controller (xy-axes) limit - high",   0.5,   0,  50)
gen.add("lim_low_vxy",       double_t,    0,   "Velocity controller (xy-axes) limit - low",   -0.5,  -50,  0)

gen.add("k_p_z",    double_t,    0,   "Position controller (z-axis) proportional gain",       5,      0,  100)
gen.add("k_i_z",    double_t,    0,   "Position controller (z-axis) integrator gain",         5,      0,  100)
gen.add("k_d_z",    double_t,    0,   "Position controller (z-axis) derivator gain",          5,      0,  100)
gen.add("lim_high_z",      double_t,    0,   "Position controller (z-axis) limit - high",   0.5,   0,  50)
gen.add("lim_low_z",       double_t,    0,   "Position controller (z-axis) limit - low",   -0.5,  -50,  0)

gen.add("k_p_vz",    double_t,    0,   "Velocity controller (z-axis) proportional gain",       5,      0,  10)
gen.add("k_i_vz",    double_t,    0,   "Velocity controller (z-axis) integrator gain",         5,      0,  10)
gen.add("k_d_vz",    double_t,    0,   "Velocity controller (z-axis) derivator gain",          5,      0,  10)
gen.add("lim_high_vz",      double_t,    0,   "Velocity controller (z-axis) limit - high",   0.5,   0,  50)
gen.add("lim_low_vz",       double_t,    0,   "Velocity controller (z-axis) limit - low",   -0.5,  -50,  0)

gen.add("yaw_rate_p",    double_t,    0,   "Yaw-rate controller proportional gain",       5,      0,  10)
gen.add("yaw_rate_i",    double_t,    0,   "Yaw-rate controller integrator gain",         5,      0,  10)
gen.add("yaw_rate_d",    double_t,    0,   "Yaw-rate controller derivator gain",          5,      0,  10)
gen.add("yaw_rate_lim_high",      double_t,    0,   "Yaw-rate controller limit - high",   0.5,   0,  50)
gen.add("yaw_rate_lim_low",       double_t,    0,   "Yaw-rate controller limit - low",   -0.5,  -50,  0)

gen.add("ff_vel_x",    double_t,    0,   "Feed-forward velocity gain - x axis",       0,      0,  10)
gen.add("ff_vel_y",    double_t,    0,   "Feed-forward velocity gain - y axis",       0,      0,  10)
gen.add("ff_vel_z",    double_t,    0,   "Feed-forward velocity gain - z axis",       0,      0,  10)

gen.add("ff_acc_x",    double_t,    0,   "Feed-forward acceleration gain - x axis",       0,      0,  10)
gen.add("ff_acc_y",    double_t,    0,   "Feed-forward acceleration gain - y axis",       0,      0,  10)
gen.add("ff_acc_z",    double_t,    0,   "Feed-forward acceleration gain - z axis",       0,      0,  10)

exit(gen.generate(PACKAGE, "plane_detection_ros", "PositionControlParameters"))